# Generated by Django 3.1.4 on 2021-01-01 14:05

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Round',
            fields=[
                ('round_num', models.IntegerField(help_text='Number of round', primary_key=True, serialize=False)),
                ('first_win_num', models.IntegerField(help_text='First winning number of the round')),
                ('second_win_num', models.IntegerField(help_text='Second winning number of the round')),
                ('third_win_num', models.IntegerField(help_text='Third winning number of the round')),
                ('fourth_win_num', models.IntegerField(help_text='Fourth winning number of the round')),
                ('fifth_win_num', models.IntegerField(help_text='Fifth winning number of the round')),
                ('sixth_win_num', models.IntegerField(help_text='Sixth winning number of the round')),
                ('bonus_num', models.IntegerField(help_text='Bonus number of the round')),
                ('first_win_money', models.BigIntegerField(help_text='Total winning money for first place')),
                ('second_win_money', models.BigIntegerField(help_text='Total winning money for second place')),
                ('third_win_money', models.BigIntegerField(help_text='Total winning money for third place')),
                ('fourth_win_money', models.BigIntegerField(help_text='Total winning money for fourth place')),
                ('fifth_win_money', models.BigIntegerField(help_text='Total winning money for fifth place')),
                ('num_first_winner', models.IntegerField(help_text='Number of first place winner')),
                ('num_second_winner', models.IntegerField(help_text='Number of second place winner')),
                ('num_third_winner', models.IntegerField(help_text='Number of third place winner')),
                ('num_fourth_winner', models.IntegerField(help_text='Number of fourth place winner')),
                ('num_fifth_winner', models.IntegerField(help_text='Number of fifth place winner')),
                ('num_auto', models.IntegerField(blank=True, help_text='Number of winner by auto type', null=True)),
                ('num_manual', models.IntegerField(blank=True, help_text='Number of winner by manual type', null=True)),
                ('num_halfauto', models.IntegerField(blank=True, help_text='Number of winner by halfauto type', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this store', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200, null=True)),
                ('opened', models.BooleanField(default=True, help_text='whether store is currently opened or not')),
                ('serve_645Lotto', models.BooleanField(default=True, help_text='whether store serves 645 lotto or not')),
                ('serve_pensionLotto', models.BooleanField(default=False, help_text='whether store serves pension lotto or not')),
                ('serve_speatto', models.BooleanField(default=False, help_text='whether store serves speatto or not')),
                ('first_place', models.ManyToManyField(blank=True, help_text='Round that the store won first place on 645 lotto', related_name='first', to='catalog.Round')),
                ('second_place', models.ManyToManyField(blank=True, help_text='Round that the store won second place on 645 lotto', related_name='second', to='catalog.Round')),
            ],
        ),
        migrations.AddField(
            model_name='round',
            name='first_stores',
            field=models.ManyToManyField(blank=True, help_text='Stores that won first place', related_name='first_stores', to='catalog.Store'),
        ),
        migrations.AddField(
            model_name='round',
            name='second_stores',
            field=models.ManyToManyField(blank=True, help_text='Stores that won second place', related_name='second_stores', to='catalog.Store'),
        ),
    ]
